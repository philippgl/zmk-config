/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {
        hotap: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            global-quick-tap;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        motap: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_OR_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            global-quick-tap;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
    };
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <2 3 4>;
            bindings = <&to 4>;
        };
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {   // 0
            bindings = <
&hotap GRAVE ESC   &kp N1     &kp N2     &kp N3     &kp N4      &kp N5
        &kp N6     &kp N7    &kp N8    &kp N9     &kp N0     &kp MINUS

&kp ESC       &kp Q      &kp W        &hotap ESC F        &motap 3 P         &hotap TAB B
        &kp J      &kp L       &kp U         &kp Y        &kp SEMI     &kp BSPC

&kp TAB       &hotap LGUI A  &hotap LALT R &hotap LSHIFT S        &hotap LCTRL T  &hotap DEL G
        &hotap BSPC M      &hotap RCTRL N &hotap RSHIFT E       &hotap LALT I        &hotap RGUI O        &kp SQT

&kp LSHFT     &kp Z      &kp X        &kp C    &hotap RALT D       &kp V    &kp C_MUTE
        &kp RET    &kp K      &hotap RALT H     &kp COMMA     &kp DOT    &kp FSLH   &kp RSHFT

        &caps_word     &kp LALT     &kp LCTRL     &mo 1      &hotap SPACE RET
                &kp SPACE     &mo 2      &kp RCTRL     &kp RALT      &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp LEFT RIGHT>;
        };

        lower_layer {   // 1
            bindings = <
&kp GRAVE    &kp F1    &kp F2    &kp F3    &kp F4    &kp F5
        &kp F6    &kp F7   &kp F8     &kp F9    &kp F10   &kp F11

&hotap GRAVE ESC &kp LBKT  &kp RBKT   &kp LBRC    &kp RBRC    &kp TAB
        &kp BSPC    &kp MINUS   &kp LS(MINUS) &kp EQUAL    &kp LS(EQUAL)    &kp F12

&trans    &hotap LGUI EXCL  &hotap LALT AT    &hotap LSHIFT HASH    &hotap LCTRL DLLR  &kp PRCNT
        &kp CARET &hotap RCTRL AMPS &hotap RSHIFT KP_MULTIPLY &hotap LALT LPAR  &hotap RGUI RPAR  &kp PIPE

&trans    &kp EQUAL &kp MINUS &kp KP_PLUS &hotap RALT LBRC  &kp RBRC  &trans
        &trans &kp LBKT  &hotap RALT RBKT &kp SEMI        &kp COLON &kp BSLH  &trans

        &trans    &trans      &trans    &trans    &trans
                &trans &trans    &trans   &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {   // 2
            bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
        &trans    &trans    &trans   &trans    &trans  &trans

&trans    &kp INS      &kp PSCRN    &kp K_CMENU  &trans       &trans
        &kp PG_UP &trans    &kp UP   &trans    &kp N0  &trans

&trans    &hotap LGUI LALT      &hotap LALT LCTRL    &hotap LSHIFT CARET    &hotap LCTRL DLLR &kp CAPS
        &kp PG_DN   &hotap RCTRL LEFT &hotap RSHIFT DOWN &hotap LALT RIGHT  &hotap RGUI DEL  &kp BSPC

&trans    &kp K_UNDO   &kp K_CUT    &kp K_COPY   &kp K_PASTE  &trans  &bootloader
        &bootloader  &trans    &trans    &trans   &trans    &trans  &trans

        &trans       &trans       &trans       &trans  &sys_reset
                &sys_reset  &trans    &trans    &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        num_block {   // 3
            bindings = <
&trans    &kp F1    &kp F2    &kp F3      &kp F4    &kp F5
        &kp KP_NUMLOCK    &kp KP_N7   &kp KP_N8          &kp KP_N9    &kp KP_MINUS   &kp F11

&kp GRAVE &kp LBKT  &kp RBKT   &kp LBRC    &kp RBRC    &kp TAB
        &kp BSPC    &kp KP_N4   &kp KP_N5 &kp KP_N6    &kp KP_PLUS &kp F12

&trans    &hotap LGUI EXCL  &hotap LALT AT    &hotap LSHIFT HASH    &hotap LCTRL DLLR  &kp PRCNT
        &kp CARET &hotap RCTRL KP_N1 &hotap RSHIFT KP_N2 &hotap LALT KP_N3  &hotap RGUI KP_ENTER &kp PIPE

&trans    &kp EQUAL &kp MINUS &kp KP_PLUS &hotap RALT LBRC  &kp RBRC  &trans
        &trans &kp LBKT  &hotap RALT KP_N0 &kp KP_ASTERISK &kp KP_DOT        &kp KP_DIVIDE  &trans

        &trans    &trans      &trans    &trans    &trans
            &trans &trans    &trans   &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        qwert {   // 4
            bindings = <
&kp GRAVE &kp N1 &kp N2   &kp N3   &kp N4    &kp N5                      &kp N6 &kp N7    &kp N8    &kp N9   &kp N0   &none
&kp ESC   &kp Q  &kp W    &kp E    &kp R     &kp T                       &kp Y  &kp U     &kp I     &kp O    &kp P    &kp BSPC
&kp TAB   &kp A  &kp S    &kp D    &kp F     &kp G                       &kp H  &kp J     &kp K     &kp L    &kp SEMI &kp SQT
&kp LSHFT &kp Z  &kp X    &kp C    &kp V     &kp B  &kp C_MUTE &none     &kp N  &kp M     &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
                 &kp LGUI &kp LALT &kp LCTRL &mo 5  &kp SPACE    &kp SPACE &mo 2  &kp RCTRL &kp RALT  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        poiuy {   // 5
            bindings = <
&kp ESC &kp N0 &kp N9   &kp N8   &kp N7    &kp N6                      &kp N5 &kp N4    &kp N3    &kp N2   &kp N1   &to 0
&kp ESC   &kp P  &kp O    &kp I    &kp U     &kp Y                       &kp Y  &kp U     &kp I     &kp O    &kp P    &kp BSPC
&kp TAB   &kp SEMI  &kp L    &kp K    &kp J     &kp H                       &kp H  &kp J     &kp K     &kp L    &kp SEMI &kp SQT
&kp RSHFT &kp FSLH  &kp DOT    &kp COMMA    &kp M     &kp N  &kp C_MUTE &none     &kp N  &kp M     &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
                 &kp RGUI &kp RALT &kp RCTRL &none  &kp RET    &kp SPACE &mo 2  &kp RCTRL &kp RALT  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
